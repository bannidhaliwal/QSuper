<html>
  <head>
    <!-- This ejs statement includes header partial.
    Varibale declaration decides which page is active !-->
    <% include head.ejs %>
    <% var page = 'gamepage'%>
    <% var active = " active"%>
  </head>
  <body>
    <% include header.ejs %>
    <div id = "GameContent" class = "container containerExtensionForContentArea" style = "background-color:white;">
      <div class = "gameCanvasWrapper">
        <!-- It is important that the dimesnions of the canvas remains same.
          if you want to change the dimensions, you have to change the functions at
          the backend as well..
          Dimensions are 400 x 400 in case if someone changes it..
        !-->
        <canvas id = "canvas" width="400" height = "400"></canvas>
      </div>
      <div class = "gameControllers">
        <div class = "gameControllersInsideBoxes">
            Level<br> <span id  = "level" style = "color:black"></span>
        </div>
        <div class = "gameControllersInsideBoxes">
            Cash<br> <span id = "score" style = "color:black"></span>
        </div>
        <div class = "gameControllersInsideBoxes">
            Moves <br><span id = "moves" style = "color:black"></span>
        </div>
        <div class = "gameControllersInsideBoxes">
            Super <br><span id = "super" style = "color:black"></span>
        </div>
      </div>
      <div class = "gameControllers" style = "height:30px;margin-top:10px;font-size:2em;text-align:center;">
        Progress
      </div>
      <div class = "gameControllers" style = "border-top:solid;margin-top:10px;">
        <canvas height = "60px" width = "380px" id = "progressBar">
        </canvas>
      </div>
      <div class = "gameControllers" style = "border:solid;">
      </div>
    </div>
    <div id = "SuperInformation" class = "finalStatsWrapper">
      <div class = "levelClearHeading">
        LEVEL CLEAR
      </div>
      <div class = "levelClearHeadingSubHeading">
        Now make a choice
      </div>
      <div class = "superBoxes">
        <div class = "superBoxesHeading">
          No Super
        </div>
        <div class = "superBoxesStats">
          You earned : <span id = "totalScore"></span>
        </div>
        <div class = "superBoxesStats">
          Your Tax : <span id = "noSuperTax"></span>
        </div>
        <div class = "superBoxesStats">
          Contributed Super : 0
        </div>
        <div class = "superBoxesStats">
          Total Super : <span id = "noSuperTotalSuper"></span>
        </div>
        <div class = "superBoxesStats">
          Total Assets : <span id = "noSuperTotalAssets"></span>
        </div>
        <div class = "superBoxesFinalScore" style = "color:orangeRed">
          <div class = "clickHereBox"> Click Here &#x2192</div>
          <div class = "finalScoreBox">
            $<span id = "noSuperTotalScore" style = "cursor:pointer;"></span>
          </div>
        </div>
      </div>
      <div class = "superBoxes">
        <div class = "superBoxesHeading">
          Pay <input id = "superContribution" type = "number" max = "30.5" min = "0" value = "30"> % Super
        </div>
        <div class = "superBoxesStats">
          You earned : <span id = "totalScore2"></span>
        </div>
        <div class = "superBoxesStats">
          Your Tax : <span id = "taxWithSuper"></span>
        </div>
        <div class = "superBoxesStats">
          Contributed Super : <span id = "contributedSuper"></span>
        </div>
        <div class = "superBoxesStats">
          Total Super : <span id = "totalSuperWithSuper"></span>
        </div>
        <div class = "superBoxesStats">
          Total Assets : <span id = "totalAssetsWithSuper"></span>
        </div>
        <div class = "superBoxesFinalScore" style = "color:green">
          <div class = "clickHereBox"> Click Here &#x2192</div>
          <div class = "finalScoreBox">
            $<span id = "totalScoreWithSuper" style = "cursor:pointer;"></span>
          </div>
        </div>
      </div>
    </div>
    <div id = "GameLost" class = "levelLostBox">
      <div class = 'levelLostBoxHeading'>
        OUT OF MOVES!!
      </div>
      <div class = "levelLostTryAgainLink">
        <a href = "/gamePage"><span id = "tryAgainLink">Try again</span></a>
      </div>
    </div>
    <a href = "/gamepage" id = "refresh" style = "display:none">
    <% include footer.ejs %>
    <!--This images will be used to draw on canvas.
        We are not showing this images that is why the display property is none.
    !-->
    <img style="display:none" id = "balance" src="/balance.png"></img>
    <img style="display:none" id = "cash" src="/cash.png"></img>
    <img style="display:none" id = "cocontribution" src="/cocontribution.png"></img>
    <img style="display:none" id = "conservative" src="/conservative.png"></img>
    <img style="display:none" id = "growth" src="/growth.png"></img>
    <img style="display:none" id = "salarysacrifice" src="/salarysacrifice.png"></img>
    <img style="display:none" id = "empty" src="/empty.png"></img>
  </body>
  <script src="/socket.io/socket.io.js"></script>
  <script src="/Scripts/AnimationFunctions.js"></script>
  <script src ="/Scripts/CalculationsForClientSide.js"></script>
  <script src = "/Scripts/Sounds.js"></script>
  <script src = "/Scripts/UpdateGameElements.js"></script>
  <script>

      //Socket functions..
      var socket = io.connect();
      var img = [document.getElementById("cash"),document.getElementById("balance"),document.getElementById("cocontribution"),
      document.getElementById("conservative"),document.getElementById("growth"),document.getElementById("salarysacrifice"),
      document.getElementById("empty")];
      //Canvas for the functions..
      var canvas = document.getElementById("canvas").getContext("2d");
      socket.emit("initializeGame",{email:"<%=locals.session.email%>"});
      //This function will be invoked when the game ends
      socket.on("GameWon",function(data){
        console.log("Game Ended");
        UpdateFinalStatsOfGame(data.levelData.score);
        SwapDivs("GameContent","SuperInformation");
      });

      socket.on("GameLost",(data)=>{
        SwapDivs("GameContent","GameLost");
      });

      socket.on("RefreshPage",(data)=>{
        document.getElementById('refresh').click();
      });
      //Swap animation for the swapping elements..
      socket.on("SwapAnimation",function(data){
        SwapObjects(data,canvas,img);
      });

      //Highlight the selected item
      socket.on("Highlight",function(data){
        Highlight(data,canvas,img,"#33FFA5");
      });

      //Dehighlight the box
      socket.on("Dehighlight",function(data){
        Highlight(data,canvas,img,"white");
      });

      //Move the elements..
      socket.on("MoveElements",function(data){
        //Here we play the music after the tiles has been popped and before moving the tiles..
        PlayMusic();
        MoveElements(data,canvas,img);
      });

      //When Socket connects with server for first time,
      //Server serves with gameBox array. With that array
      //We draw on canvas.
      socket.on("Game Initialized",function(data){
        var array = data.array;
        var HEIGHT_OF_CANVAS = 400;
        var WIDTH_OF_CANVAS = 400;
        canvas.clearRect(0, 0, WIDTH_OF_CANVAS,HEIGHT_OF_CANVAS);//clear the canvas before redrawing..
        UpdateHTML(array);
        for(var i = 0; i < array.length;i++){
          if(array[i] !== null){
            //Here we are choosing element from array img on the base of element of current box.
            canvas.drawImage(img[array[i].element],array[i].xPosition,array[i].yPosition,array[i].height,array[i].width);
          }
        }//end For
      }
      );//end Socket.on
      socket.on("Redraw",function(data){
        var array = data.array;
        var HEIGHT_OF_CANVAS = 400;
        var WIDTH_OF_CANVAS = 400;
        UpdateHTML(array);
        canvas.clearRect(0, 0, WIDTH_OF_CANVAS,HEIGHT_OF_CANVAS);//clear the canvas before redrawing..
        UpdateTheProgressBar(array[11]);
        document.getElementById("score").innerHTML = array[11].score;
        for(var i = 0; i < array.length;i++){
          if(array[i] !== null){
            //Here we are choosing element from array img on the base of element of current box.
            canvas.drawImage(img[array[i].element],array[i].xPosition,array[i].yPosition,array[i].height,array[i].width);
          }
        }//end For
      }
      );

      //we are adding the event listener to the canvas on click
      var canvasPlane = document.getElementById("canvas");
      canvasPlane.addEventListener('click',function() {
        var canvas = document.getElementById("canvas");
        var rectangleOnCanvas = canvas.getBoundingClientRect();
        var xCoord = Math.round(event.clientX - rectangleOnCanvas.left);
        var yCoord = Math.round(event.clientY - rectangleOnCanvas.top);
        socket.emit("ClickedOnCanvas",{X : xCoord, Y : yCoord});
      });
      /*Add event listener to the input field*/
      document.getElementById('superContribution').addEventListener('change',function(){
        setTimeout(UpdateOnKeyPress,30);
      });
      /*
        Add the event listeners to the scores. When we click 
        no super then we just emit the socket event with the 
        0 % contribution and if we click on the contributed 
        score then we emit the socket event with the value 
        from the user inputted value. Error checking will be 
        done on the server end. However, user will not be 
        prompted because error cannot be done unless intentional
        otherwise.
      */
      document.getElementById('totalScoreWithSuper').addEventListener('click',()=>{
        var contribution = document.getElementById("superContribution").value;
        contribution = parseInt(contribution);
        if(contribution < 0 || contribution > 30){
          contribution = 30;
        }
        setTimeout(()=>{
          socket.emit("SaveData",{contribution : contribution});
        },200);
      });
      document.getElementById('noSuperTotalScore').addEventListener('click',()=>{
        setTimeout(()=>{
          socket.emit("SaveData",{contribution : 0});
        },200);
        setTimeout(()=>{
          document.getElementById('refresh').click();
        },2000);
      });
  </script>
</html>
